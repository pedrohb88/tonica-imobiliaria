document.querySelector('mutation-test-report-app').report = {"files":{"C:\\xampp\\htdocs\\tonica-imobiliaria\\classes\\Imovel.js":{"language":"javascript","mutants":[{"id":"0","location":{"end":{"column":6,"line":15},"start":{"column":146,"line":2}},"mutatorName":"BlockStatement","replacement":"{}","status":"Timeout"},{"id":"1","location":{"end":{"column":6,"line":58},"start":{"column":15,"line":17}},"mutatorName":"BlockStatement","replacement":"{}","status":"Timeout"},{"id":"3","location":{"end":{"column":38,"line":18},"start":{"column":33,"line":18}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Timeout"},{"id":"2","location":{"end":{"column":62,"line":18},"start":{"column":32,"line":18}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Timeout"},{"id":"4","location":{"end":{"column":48,"line":18},"start":{"column":40,"line":18}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Timeout"},{"id":"5","location":{"end":{"column":61,"line":18},"start":{"column":50,"line":18}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Timeout"},{"id":"7","location":{"end":{"column":46,"line":19},"start":{"column":39,"line":19}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Timeout"},{"id":"6","location":{"end":{"column":66,"line":19},"start":{"column":38,"line":19}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Timeout"},{"id":"9","location":{"end":{"column":65,"line":19},"start":{"column":57,"line":19}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Timeout"},{"id":"8","location":{"end":{"column":55,"line":19},"start":{"column":48,"line":19}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Timeout"},{"id":"10","location":{"end":{"column":113,"line":20},"start":{"column":31,"line":20}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Timeout"},{"id":"11","location":{"end":{"column":38,"line":20},"start":{"column":32,"line":20}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Timeout"},{"id":"13","location":{"end":{"column":55,"line":20},"start":{"column":47,"line":20}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Timeout"},{"id":"12","location":{"end":{"column":45,"line":20},"start":{"column":40,"line":20}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Timeout"},{"id":"14","location":{"end":{"column":77,"line":20},"start":{"column":57,"line":20}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Timeout"},{"id":"15","location":{"end":{"column":92,"line":20},"start":{"column":79,"line":20}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Timeout"},{"id":"17","location":{"end":{"column":52,"line":24},"start":{"column":25,"line":24}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Timeout"},{"id":"16","location":{"end":{"column":112,"line":20},"start":{"column":94,"line":20}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Timeout"},{"id":"19","location":{"end":{"column":52,"line":24},"start":{"column":25,"line":24}},"mutatorName":"EqualityOperator","replacement":"i >= camposCaracteres.length","status":"Timeout"},{"id":"18","location":{"end":{"column":52,"line":24},"start":{"column":25,"line":24}},"mutatorName":"EqualityOperator","replacement":"i <= camposCaracteres.length","status":"Timeout"},{"id":"20","location":{"end":{"column":57,"line":24},"start":{"column":54,"line":24}},"mutatorName":"UpdateOperator","replacement":"i--","status":"Killed"},{"id":"21","location":{"end":{"column":10,"line":36},"start":{"column":59,"line":24}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"25","location":{"end":{"column":14,"line":29},"start":{"column":66,"line":27}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"24","location":{"end":{"column":64,"line":27},"start":{"column":17,"line":27}},"mutatorName":"BooleanLiteral","replacement":"/^[ a-z]+$/i.test(imovel[camposCaracteres[i]])","status":"Killed"},{"id":"27","location":{"end":{"column":82,"line":33},"start":{"column":17,"line":32}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"26","location":{"end":{"column":29,"line":28},"start":{"column":24,"line":28}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Killed"},{"id":"29","location":{"end":{"column":82,"line":33},"start":{"column":17,"line":32}},"mutatorName":"LogicalOperator","replacement":"imovel[camposCaracteres[i]].length < camposCaracteresRanges[i][0] && imovel[camposCaracteres[i]].length > camposCaracteresRanges[i][1]","status":"Survived"},{"id":"28","location":{"end":{"column":82,"line":33},"start":{"column":17,"line":32}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"30","location":{"end":{"column":82,"line":32},"start":{"column":17,"line":32}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"31","location":{"end":{"column":82,"line":32},"start":{"column":17,"line":32}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"22","location":{"end":{"column":64,"line":27},"start":{"column":17,"line":27}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"23","location":{"end":{"column":64,"line":27},"start":{"column":17,"line":27}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"32","location":{"end":{"column":82,"line":32},"start":{"column":17,"line":32}},"mutatorName":"EqualityOperator","replacement":"imovel[camposCaracteres[i]].length <= camposCaracteresRanges[i][0]","status":"Survived"},{"id":"33","location":{"end":{"column":82,"line":32},"start":{"column":17,"line":32}},"mutatorName":"EqualityOperator","replacement":"imovel[camposCaracteres[i]].length >= camposCaracteresRanges[i][0]","status":"Killed"},{"id":"35","location":{"end":{"column":82,"line":33},"start":{"column":17,"line":33}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"34","location":{"end":{"column":82,"line":33},"start":{"column":17,"line":33}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"36","location":{"end":{"column":82,"line":33},"start":{"column":17,"line":33}},"mutatorName":"EqualityOperator","replacement":"imovel[camposCaracteres[i]].length >= camposCaracteresRanges[i][1]","status":"Survived"},{"id":"37","location":{"end":{"column":82,"line":33},"start":{"column":17,"line":33}},"mutatorName":"EqualityOperator","replacement":"imovel[camposCaracteres[i]].length <= camposCaracteresRanges[i][1]","status":"Killed"},{"id":"39","location":{"end":{"column":29,"line":34},"start":{"column":24,"line":34}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"38","location":{"end":{"column":14,"line":35},"start":{"column":84,"line":33}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"41","location":{"end":{"column":51,"line":38},"start":{"column":25,"line":38}},"mutatorName":"EqualityOperator","replacement":"i <= camposNumericos.length","status":"Killed"},{"id":"40","location":{"end":{"column":51,"line":38},"start":{"column":25,"line":38}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"43","location":{"end":{"column":56,"line":38},"start":{"column":53,"line":38}},"mutatorName":"UpdateOperator","replacement":"i--","status":"Killed"},{"id":"42","location":{"end":{"column":51,"line":38},"start":{"column":25,"line":38}},"mutatorName":"EqualityOperator","replacement":"i >= camposNumericos.length","status":"Killed"},{"id":"45","location":{"end":{"column":62,"line":41},"start":{"column":31,"line":41}},"mutatorName":"ArithmeticOperator","replacement":"\"\" - imovel[camposNumericos[i]]","status":"Survived"},{"id":"44","location":{"end":{"column":10,"line":55},"start":{"column":58,"line":38}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"46","location":{"end":{"column":33,"line":41},"start":{"column":31,"line":41}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"47","location":{"end":{"column":39,"line":42},"start":{"column":17,"line":42}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"49","location":{"end":{"column":39,"line":42},"start":{"column":17,"line":42}},"mutatorName":"EqualityOperator","replacement":"numToString.length <= 1","status":"Killed"},{"id":"48","location":{"end":{"column":39,"line":42},"start":{"column":17,"line":42}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"51","location":{"end":{"column":14,"line":44},"start":{"column":41,"line":42}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"50","location":{"end":{"column":39,"line":42},"start":{"column":17,"line":42}},"mutatorName":"EqualityOperator","replacement":"numToString.length >= 1","status":"Killed"},{"id":"52","location":{"end":{"column":29,"line":43},"start":{"column":24,"line":43}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Killed"},{"id":"53","location":{"end":{"column":61,"line":47},"start":{"column":17,"line":47}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"55","location":{"end":{"column":61,"line":47},"start":{"column":17,"line":47}},"mutatorName":"BooleanLiteral","replacement":"/^[0-9]+$/.test(imovel[camposNumericos[i]])","status":"Killed"},{"id":"54","location":{"end":{"column":61,"line":47},"start":{"column":17,"line":47}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"56","location":{"end":{"column":14,"line":49},"start":{"column":63,"line":47}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"57","location":{"end":{"column":29,"line":48},"start":{"column":24,"line":48}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Killed"},{"id":"58","location":{"end":{"column":47,"line":52},"start":{"column":17,"line":52}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"59","location":{"end":{"column":47,"line":52},"start":{"column":17,"line":52}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"60","location":{"end":{"column":47,"line":52},"start":{"column":17,"line":52}},"mutatorName":"EqualityOperator","replacement":"imovel[camposNumericos[i]] <= 0","status":"Killed"},{"id":"61","location":{"end":{"column":47,"line":52},"start":{"column":17,"line":52}},"mutatorName":"EqualityOperator","replacement":"imovel[camposNumericos[i]] >= 0","status":"Killed"},{"id":"62","location":{"end":{"column":14,"line":54},"start":{"column":49,"line":52}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"63","location":{"end":{"column":29,"line":53},"start":{"column":24,"line":53}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"64","location":{"end":{"column":20,"line":57},"start":{"column":16,"line":57}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Killed"}],"source":"class Imovel {\r\n    constructor({id, rua, bairro, numero, cep, area, descricao, proprietarioAntigo, proprietarioNovo, precoCompra, precoVenda, precoMinimoVenda}){\r\n        this.id = id;\r\n        this.rua = rua;\r\n        this.bairro = bairro;\r\n        this.numero = numero;\r\n        this.cep = cep;\r\n        this.area = area;\r\n        this.descricao = descricao;\r\n        this.proprietarioAntigo = proprietarioAntigo;\r\n        this.proprietarioNovo = proprietarioNovo;\r\n        this.precoCompra = precoCompra;\r\n        this.precoVenda = precoVenda;\r\n        this.precoMinimoVenda = precoMinimoVenda;\r\n    }\r\n\r\n    validar() {\r\n        let camposCaracteres = [\"rua\", \"bairro\", \"descricao\"];\r\n        let camposCaracteresRanges = [[1, 50], [1, 20], [1, 100]];\r\n        let camposNumericos = [\"area\", \"cep\", \"numero\", \"proprietarioAntigo\", \"precoCompra\", \"precoMinimoVenda\"];\r\n\r\n        let imovel = this;\r\n    \r\n        for (let i = 0; i < camposCaracteres.length; i++) {\r\n    \r\n            //Testa se os campos de caractares possuem somente letras e espaços\r\n            if (!/^[ a-z]+$/i.test(imovel[camposCaracteres[i]])) {\r\n                return false;\r\n            }\r\n    \r\n            //Testa se os campos de caracteres de quantidades adequadas de caractares\r\n            if (imovel[camposCaracteres[i]].length < camposCaracteresRanges[i][0] ||\r\n                imovel[camposCaracteres[i]].length > camposCaracteresRanges[i][1]) {\r\n                return false;\r\n            }\r\n        }\r\n    \r\n        for (let i = 0; i < camposNumericos.length; i++) {\r\n    \r\n            //Testa se os números possuem pelo menos 1 algarísmo\r\n            let numToString = \"\" + imovel[camposNumericos[i]];\r\n            if (numToString.length < 1) {\r\n                return false;\r\n            }\r\n    \r\n            //Testa se os campos numericos possuem somente números\r\n            if (!/^[0-9]+$/.test(imovel[camposNumericos[i]])) {\r\n                return false;\r\n            }\r\n    \r\n            //Testa se os valores nos campos numéricos são não negativos\r\n            if (imovel[camposNumericos[i]] < 0) {\r\n                return false;\r\n            }\r\n        }\r\n    \r\n        return true;\r\n    }\r\n}\r\n\r\nexport default Imovel;\r\n"},"C:\\xampp\\htdocs\\tonica-imobiliaria\\classes\\ImovelDBI.js":{"language":"javascript","mutants":[{"id":"65","location":{"end":{"column":6,"line":6},"start":{"column":19,"line":4}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"66","location":{"end":{"column":26,"line":5},"start":{"column":24,"line":5}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Killed"},{"id":"67","location":{"end":{"column":6,"line":10},"start":{"column":26,"line":8}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"69","location":{"end":{"column":6,"line":24},"start":{"column":22,"line":13}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"68","location":{"end":{"column":38,"line":9},"start":{"column":27,"line":9}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"70","location":{"end":{"column":31,"line":14},"start":{"column":26,"line":14}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Killed"},{"id":"71","location":{"end":{"column":48,"line":15},"start":{"column":25,"line":15}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"72","location":{"end":{"column":48,"line":15},"start":{"column":25,"line":15}},"mutatorName":"EqualityOperator","replacement":"i <= this.imoveis.length","status":"Killed"},{"id":"73","location":{"end":{"column":48,"line":15},"start":{"column":25,"line":15}},"mutatorName":"EqualityOperator","replacement":"i >= this.imoveis.length","status":"Killed"},{"id":"75","location":{"end":{"column":10,"line":21},"start":{"column":55,"line":15}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"74","location":{"end":{"column":53,"line":15},"start":{"column":50,"line":15}},"mutatorName":"UpdateOperator","replacement":"i--","status":"Killed"},{"id":"77","location":{"end":{"column":41,"line":16},"start":{"column":17,"line":16}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"76","location":{"end":{"column":41,"line":16},"start":{"column":17,"line":16}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"78","location":{"end":{"column":41,"line":16},"start":{"column":17,"line":16}},"mutatorName":"EqualityOperator","replacement":"this.imoveis[i].id != id","status":"Killed"},{"id":"79","location":{"end":{"column":14,"line":20},"start":{"column":43,"line":16}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"80","location":{"end":{"column":34,"line":18},"start":{"column":30,"line":18}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Killed"},{"id":"81","location":{"end":{"column":6,"line":37},"start":{"column":26,"line":27}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"82","location":{"end":{"column":48,"line":30},"start":{"column":25,"line":30}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"83","location":{"end":{"column":48,"line":30},"start":{"column":25,"line":30}},"mutatorName":"EqualityOperator","replacement":"i <= this.imoveis.length","status":"Killed"},{"id":"85","location":{"end":{"column":53,"line":30},"start":{"column":50,"line":30}},"mutatorName":"UpdateOperator","replacement":"i--","status":"Killed"},{"id":"84","location":{"end":{"column":48,"line":30},"start":{"column":25,"line":30}},"mutatorName":"EqualityOperator","replacement":"i >= this.imoveis.length","status":"Killed"},{"id":"87","location":{"end":{"column":41,"line":31},"start":{"column":17,"line":31}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"86","location":{"end":{"column":10,"line":34},"start":{"column":55,"line":30}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"88","location":{"end":{"column":41,"line":31},"start":{"column":17,"line":31}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"89","location":{"end":{"column":41,"line":31},"start":{"column":17,"line":31}},"mutatorName":"EqualityOperator","replacement":"this.imoveis[i].id != id","status":"Killed"},{"id":"90","location":{"end":{"column":14,"line":33},"start":{"column":43,"line":31}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"91","location":{"end":{"column":48,"line":32},"start":{"column":26,"line":32}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"92","location":{"end":{"column":6,"line":47},"start":{"column":20,"line":40}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"93","location":{"end":{"column":25,"line":41},"start":{"column":23,"line":41}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Killed"},{"id":"94","location":{"end":{"column":48,"line":42},"start":{"column":25,"line":42}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"95","location":{"end":{"column":48,"line":42},"start":{"column":25,"line":42}},"mutatorName":"EqualityOperator","replacement":"i <= this.imoveis.length","status":"Killed"},{"id":"99","location":{"end":{"column":46,"line":43},"start":{"column":26,"line":43}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"98","location":{"end":{"column":10,"line":44},"start":{"column":55,"line":42}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"97","location":{"end":{"column":53,"line":42},"start":{"column":50,"line":42}},"mutatorName":"UpdateOperator","replacement":"i--","status":"Timeout"},{"id":"96","location":{"end":{"column":48,"line":42},"start":{"column":25,"line":42}},"mutatorName":"EqualityOperator","replacement":"i >= this.imoveis.length","status":"Timeout"}],"source":"import Imovel from './Imovel.js';\r\n\r\nclass ImovelDBI {\r\n    constructor() {\r\n        this.imoveis = [];\r\n    }\r\n\r\n    insereImovel(imovel) {\r\n        this.imoveis.push({...imovel});\r\n    }\r\n\r\n    //Recebe o id de um imóvel e tenta removê-lo, se um imóvel com aquele ID for encontrado e removido, a função retorna TRUE, caso contrário, FALSE\r\n    removeImovel(id) {\r\n        let wasRemoved = false;\r\n        for (let i = 0; i < this.imoveis.length; i++) {\r\n            if (this.imoveis[i].id == id) {\r\n                this.imoveis.splice(i, 1);\r\n                wasRemoved = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return wasRemoved;\r\n    }\r\n\r\n    //Retorna o imóvel que com o id passado como argumento, returnua null caso não existe imóvel com o id passado\r\n    buscaImovelPorId(id) {\r\n        let imovel = null;\r\n\r\n        for (let i = 0; i < this.imoveis.length; i++) {\r\n            if (this.imoveis[i].id == id) {\r\n                imovel = { ...this.imoveis[i] };\r\n            }\r\n        }\r\n\r\n        return imovel;\r\n    }\r\n\r\n    //Retorna um array com todos os imóveis cadastrados\r\n    buscaImoveis() {\r\n        let imoveis = [];\r\n        for (let i = 0; i < this.imoveis.length; i++) {\r\n            imoveis.push({...this.imoveis[i]});\r\n        }\r\n\r\n        return imoveis;\r\n    }\r\n}\r\n\r\nexport default ImovelDBI;"}},"schemaVersion":"1.0","thresholds":{"high":80,"low":60,"break":null}};